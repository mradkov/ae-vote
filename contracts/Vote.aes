contract Vote =
   type candidate = address
   type votes = list(address)

   record state = 
      { vote : map(candidate, votes) }

   public function init() : state = 
      { vote = { } }

   public stateful function vote(vote_for: candidate) =
      put(state{ vote[vote_for = []] @ vs = Call.caller :: vs })

   public function count_votes(count_for : candidate) =
      length(state.vote[count_for = []])

   private function length(l : list('a)) : int = length'(l, 0)

   private function length'(l : list('a), x : int) : int =
      switch(l)
         [] => x
         _ :: l' => length'(l', x + 1)